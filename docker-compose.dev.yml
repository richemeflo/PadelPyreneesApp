version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      target: development
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:5000/api
      - VITE_WS_URL=ws://localhost:5000
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/dist
    command: npm run dev
    develop:
      watch:
        - action: sync
          path: ./frontend/src
          target: /app/src
        - action: rebuild
          path: ./frontend/package.json

  backend:
    build:
      context: ./backend
      target: development
    ports:
      - "5000:5000"
      - "9229:9229"  # Debug port
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://padel_user:dev_password@postgres:5432/padel_dev_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev_secret_key_super_long_for_security
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/uploads:/app/uploads
    command: npm run dev
    develop:
      watch:
        - action: sync
          path: ./backend/src
          target: /app/src
        - action: rebuild
          path: ./backend/package.json

  postgres:
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=padel_dev_db
      - POSTGRES_USER=padel_user
      - POSTGRES_PASSWORD=dev_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d:ro

  redis:
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data

  # Outils de développement
  adminer:
    image: adminer:latest
    ports:
      - "8080:8080"
    networks:
      - padel-network
    depends_on:
      - postgres
    environment:
      - ADMINER_DEFAULT_SERVER=postgres

  # Redis Commander pour debug Redis
  redis-commander:
    image: rediscommander/redis-commander:latest
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    networks:
      - padel-network
    depends_on:
      - redis

volumes:
  postgres_dev_data:
  redis_dev_data:

# Pas de nginx en dev, accès direct aux services